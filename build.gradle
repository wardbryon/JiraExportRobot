import java.util.regex.Matcher

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'maven-publish'
}

group "$groupId"
version "$version"
sourceCompatibility = '21'

repositories {
    mavenCentral()
    maven { url "https://packages.atlassian.com/maven-public/" }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("$repoUrl")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = "$groupId"
            artifactId = "jira_exportbot"
            version = "$version"

            artifact bootJar
        }
    }
}

bootJar {
    archiveBaseName = "jira-export-robot-app"
    archiveVersion =  "$version-FINAL"
}


tasks.withType(GenerateMavenPom).all {
    doLast {
        File file = new File("$buildDir/publications/gpr/pom-default.xml")
        def text = file.text
        def pattern = "(?s)(<dependencyManagement>.+?<dependencies>)(.+?)(</dependencies>.+?</dependencyManagement>)"
        Matcher matcher = text =~ pattern
        if (matcher.find()) {
            text = text.replaceFirst(pattern, "")
            def firstDeps = matcher.group(2)
            text = text.replaceFirst(pattern, '$1$2' + firstDeps + '$3')
        }
        file.write(text)
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'com.atlassian.jira:jira-rest-java-client-core:7.0.1'
    implementation 'com.atlassian.jira:jira-rest-java-client-api:7.0.1'
    implementation "com.atlassian.jira:jira-rest-java-client-app:7.0.1"
    implementation 'io.atlassian.fugue:fugue:6.1.2'

    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
    implementation 'org.glassfish.jersey.core:jersey-client:3.1.11'
    implementation 'org.glassfish.jersey.core:jersey-common:3.1.11'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.1.11'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:3.1.11'

    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.5'
    implementation 'jakarta.activation:jakarta.activation-api:2.1.3'

    // Add these for compatibility
    implementation 'org.glassfish.jersey.connectors:jersey-apache-connector:2.39.1'

    implementation 'org.apache.poi:poi-ooxml:5.4.1'

    testImplementation platform('org.junit:junit-bom:5.13.3')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

tasks.named('test') {
    useJUnitPlatform()
}

